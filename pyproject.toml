[project]
name = "onedl-mmdeploy"
version = "1.4.0-rc.0"
description = "OpenMMLab Model Deployment"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
    {name = "MMDeploy Contributors"},
    {name = "VBTI Software Team", email = "oss@vbti.nl"}
]
maintainers = [
    {name = "VBTI Software Team", email = "oss@vbti.nl"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["computer vision", "model deployment"]
requires-python = ">=3.10"
dependencies = [
    "aenum",
    "grpcio",
    "matplotlib",
    "multiprocess",
    "numpy",
    "onnx>=1.13.0",
    "prettytable",
    "protobuf<=3.20.2",
    "six",
    "terminaltables",
]

[dependency-groups]
build = [
    "setuptools>=61.0",
    "wheel",
    "cython",
    "numpy",
    "packaging",
]
tests = [
    "asynctest",
    "openpyxl==3.0.9",
    "pandas",
    "pytest",
    "pyyaml",
    "xlrd==1.2.0",
]
docs=[
    "docutils",
    "m2r==0.2.1",
    "markdown>=3.4.0",
    "mistune==0.8.4",
    "myst-parser",
    "pytorch_sphinx_theme @ git+https://github.com/VBTI-development/onedl_sphinx_theme.git@master",
    "recommonmark",
    "sphinx",
    "sphinx-copybutton",
    "sphinx_markdown_tables>=0.0.16",
    "sphinxcontrib-mermaid",
    "torch",
    "urllib3",
]


[project.optional-dependencies]
backends = [
    "onnxruntime>=1.8.0",
    "openvino-dev==2022.3.0",
]
codebases = [
    "onedl-mmdetection>=3.0.0",
    "onedl-mmpretrain>=1.0.0",
    "onedl-mmrotate>=1.0.0rc1",
    "onedl-mmsegmentation>=1.0.0",
]
mminstall =  [
    "onedl-mmengine",
]
optional = [
    "h5py",
    "tqdm"
]
torch = [ "torch<2.6" ]

[project.urls]
Homepage = "https://github.com/vbti-development/onedl-mmdeploy"
Repository = "https://github.com/vbti-development/onedl-mmdeploy"
Documentation = "https://onedl-mmdeploy.readthedocs.io/"
Issues = "https://github.com/vbti-development/onedl-mmdeploy/issues"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["mmdeploy", "mmdeploy.*"]
exclude = ["tests", "docs", "configs", "tools", "demo", "src"]
namespaces = false

[tool.coverage.run]
source = ["onedl_mmdeploy"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.pytest.ini_options]
addopts = [
    "--ignore=src",
    "--ignore=third_party"
]

[tool.yapf]
based_on_style = "pep8"
blank_line_before_nested_class_or_def = true
split_before_expression_after_opening_paren = true

[tool.isort]
line_length = 79
multi_line_output = 0
extra_standard_library = ["setuptools"]
known_first_party = ["mmdeploy"]
known_third_party = [
    "h5py", "m2r", "mmpretrain", "mmcv", "mmdeploy_runtime", "mmdet",
    "mmagic", "mmocr", "mmseg", "ncnn", "numpy", "onnx", "onnxruntime",
    "packaging", "pyppeteer", "pyppl", "pytest", "pytorch_sphinx_theme",
    "recommonmark", "setuptools", "sphinx", "tensorrt", "torch", "torchvision"
]
no_lines_before = ["STDLIB", "LOCALFOLDER"]
default_section = "THIRDPARTY"
skip = [
    "service/snpe/client/inference_pb2.py",
    "service/snpe/client/inference_pb2_grpc.py"
]

[tool.codespell]
ignore-words = ".codespell_ignore.txt"

[tool.uv]
no-build-isolation-package = ["torch", "onedl-mmdeploy"]
